<?php

namespace Mrfansi\Xendit\Data;

use Carbon\Carbon;
use DateTimeInterface;
use Mrfansi\Xendit\Data\Abstracts\AbstractDataTransferObject;
use Mrfansi\Xendit\Data\CardChannel\CardChannelProperties;
use Mrfansi\Xendit\Enums\Currency;
use Mrfansi\Xendit\Enums\InvoiceStatus;
use Mrfansi\Xendit\Traits\EnumToArray;

class InvoiceResponse extends AbstractDataTransferObject
{
    use EnumToArray;

    /**
     * Constructor for the InvoiceResponse class.
     *
     * @param  string|null  $id  Invoice ID generated by Xendit
     * @param  string|null  $external_id  Invoice ID in your server for reconciliation
     * @param  string|null  $user_id  Your Xendit Business ID
     * @param  InvoiceStatus|null  $status  Current status of the invoice
     * @param  string|null  $merchant_name  Your company or website name
     * @param  string|null  $merchant_profile_picture_url  URL to your company's profile picture
     * @param  float|null  $amount  Invoice amount
     * @param  string|null  $payer_email  Payer's email address
     * @param  string|null  $description  Invoice description
     * @param  string|null  $invoice_url  Public URL for this invoice
     * @param  DateTimeInterface|null  $expiry_date  Invoice expiry date and time
     * @param  array|null  $available_banks  Available payment methods through banks
     * @param  array|null  $available_retail_outlets  Available payment methods through retail outlets
     * @param  array|null  $available_ewallets  Available payment methods through e-wallets
     * @param  array|null  $available_qr_codes  Available payment methods through QR codes
     * @param  array|null  $available_direct_debits  Available payment methods through direct debits
     * @param  array|null  $available_paylaters  Available payment methods through paylaters
     * @param  bool|null  $should_exclude_credit_card  Should credit card be excluded in invoice UI
     * @param  bool|null  $should_send_email  Should send email notifications
     * @param  DateTimeInterface|null  $updated  Last update timestamp
     * @param  DateTimeInterface|null  $created  Creation timestamp
     * @param  string|null  $mid_label  MID label for credit card payments
     * @param  Currency|null  $currency  Invoice currency
     * @param  string|null  $success_redirect_url  URL to redirect after successful payment
     * @param  string|null  $failure_redirect_url  URL to redirect after failed payment
     * @param  string|null  $payment_methods  Payment methods
     * @param  array|null  $fixed_va  Fixed VA configuration
     * @param  array|null  $items  Items in the invoice
     * @param  array|null  $fees  Additional fees
     * @param  array|null  $payment_details  Payment details
     * @param  bool|null  $should_authenticate_credit_card  Should authenticate credit card payment
     * @param  CardChannelProperties|null  $channel_properties  Channel properties
     * @param  array|null  $metadata  Additional metadata
     */
    public function __construct(
        public ?string $id = null,
        public ?string $external_id = null,
        public ?string $user_id = null,
        public ?InvoiceStatus $status = null,
        public ?string $merchant_name = null,
        public ?string $merchant_profile_picture_url = null,
        public ?float $amount = null,
        public ?string $payer_email = null,
        public ?string $description = null,
        public ?string $invoice_url = null,
        public ?DateTimeInterface $expiry_date = null,
        public ?array $available_banks = null,
        public ?array $available_retail_outlets = null,
        public ?array $available_ewallets = null,
        public ?array $available_qr_codes = null,
        public ?array $available_direct_debits = null,
        public ?array $available_paylaters = null,
        public ?bool $should_exclude_credit_card = null,
        public ?bool $should_send_email = null,
        public ?DateTimeInterface $updated = null,
        public ?DateTimeInterface $created = null,
        public ?string $mid_label = null,
        public ?Currency $currency = null,
        public ?string $success_redirect_url = null,
        public ?string $failure_redirect_url = null,
        public ?string $payment_methods = null,
        public ?array $fixed_va = null,
        public ?array $items = null,
        public ?array $fees = null,
        public ?array $payment_details = null,
        public ?bool $should_authenticate_credit_card = null,
        public ?CardChannelProperties $channel_properties = null,
        public ?array $metadata = null,
    ) {}

    public static function fromArray(array $data): self
    {
        return new self(
            id: $data['id'] ?? null,
            external_id: $data['external_id'] ?? null,
            user_id: $data['user_id'] ?? null,
            status: $data['status'] ? InvoiceStatus::from($data['status']) : null,
            merchant_name: $data['merchant_name'] ?? null,
            merchant_profile_picture_url: $data['merchant_profile_picture_url'] ?? null,
            amount: $data['amount'] ?? null,
            payer_email: $data['payer_email'] ?? null,
            description: $data['description'] ?? null,
            invoice_url: $data['invoice_url'] ?? null,
            expiry_date: $data['expiry_date'] ? Carbon::createFromFormat('Y-m-d H:i:s', $data['expiry_date']) : null,
            available_banks: $data['available_banks'] ?? null,
            available_retail_outlets: $data['available_retail_outlets'] ?? null,
            available_ewallets: $data['available_ewallets'] ?? null,
            available_qr_codes: $data['available_qr_codes'] ?? null,
            available_direct_debits: $data['available_direct_debits'] ?? null,
            available_paylaters: $data['available_paylaters'] ?? null,
            should_exclude_credit_card: $data['should_exclude_credit_card'] ?? null,
            should_send_email: $data['should_send_email'] ?? null,
            mid_label: $data['mid_label'] ?? null,
            currency: $data['currency'] ? Currency::from($data['currency']) : null,
            success_redirect_url: $data['success_redirect_url'] ?? null,
            failure_redirect_url: $data['failure_redirect_url'] ?? null,
            payment_methods: $data['payment_methods'] ?? null,
            fixed_va: $data['fixed_va'] ?? null,
            items: $data['items'] ?? null,
            fees: $data['fees'] ?? null,
            payment_details: $data['payment_details'] ?? null,
            should_authenticate_credit_card: $data['should_authenticate_credit_card'] ?? null,
            channel_properties: $data['channel_properties'] ? CardChannelProperties::fromArray($data['channel_properties']) : null,
            metadata: $data['metadata'] ?? null,
            updated: $data['updated'] ? Carbon::createFromFormat('Y-m-d H:i:s', $data['updated']) : null,
            created: $data['created'] ? Carbon::createFromFormat('Y-m-d H:i:s', $data['created']) : null,
        );
    }
}
