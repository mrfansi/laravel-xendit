<?php

namespace Mrfansi\XenditSdk\Data;

use DateTimeInterface;
use Mrfansi\XenditSdk\Data\CardChannel\CardChannelProperties;
use Mrfansi\XenditSdk\Enums\Currency;
use Mrfansi\XenditSdk\Enums\InvoiceStatus;
use Mrfansi\XenditSdk\Traits\EnumToArray;
use Spatie\LaravelData\Data;

class InvoiceResponse extends Data
{
    use EnumToArray;

    /**
     * Constructor for the InvoiceResponse class.
     *
     * @param  string  $id  Invoice ID generated by Xendit
     * @param  string  $user_id  Your Xendit Business ID
     * @param  string  $external_id  Invoice ID in your server for reconciliation
     * @param  InvoiceStatus  $status  Current status of the invoice
     * @param  string  $merchant_name  Your company or website name
     * @param  string|null  $merchant_profile_picture_url  URL to your company's profile picture
     * @param  float  $amount  Invoice amount
     * @param  string|null  $payer_email  Payer's email address
     * @param  string|null  $description  Invoice description
     * @param  string  $invoice_url  Public URL for this invoice
     * @param  Customer|null  $customer  End customer's details
     * @param  NotificationPreference|null  $customer_notification_preference  Notification preferences for this invoice
     * @param  DateTimeInterface  $expiry_date  Invoice expiry date and time
     * @param  array|null  $available_banks  Available payment methods through banks
     * @param  array|null  $available_retail_outlets  Available payment methods through retail outlets
     * @param  bool  $should_exclude_credit_card  Should credit card be excluded in invoice UI
     * @param  bool  $should_send_email  Should send email notifications
     * @param  DateTimeInterface  $updated  Last update timestamp
     * @param  DateTimeInterface  $created  Creation timestamp
     * @param  string|null  $mid_label  MID label for credit card payments
     * @param  Currency|null  $currency  Invoice currency
     * @param  string|null  $success_redirect_url  URL to redirect after successful payment
     * @param  string|null  $failure_redirect_url  URL to redirect after failed payment
     * @param  string|null  $payment_methods  Payment methods
     * @param  array|null  $fixed_va  Fixed VA configuration
     * @param  array|null  $items  Items in the invoice
     * @param  array|null  $fees  Additional fees
     * @param  PaymentDetails|null  $payment_details  Payment details
     * @param  bool|null  $should_authenticate_credit_card  Should authenticate credit card payment
     * @param  CardChannelProperties|null  $channel_properties  Channel properties
     * @param  array|null  $metadata  Additional metadata
     */
    public function __construct(
        public string $id,
        public string $user_id,
        public string $external_id,
        public InvoiceStatus $status,
        public string $merchant_name,
        public ?string $merchant_profile_picture_url,
        public float $amount,
        public ?string $payer_email,
        public ?string $description,
        public string $invoice_url,
        public ?Customer $customer,
        public ?NotificationPreference $customer_notification_preference,
        public DateTimeInterface $expiry_date,
        public ?array $available_banks,
        public ?array $available_retail_outlets,
        public bool $should_exclude_credit_card,
        public bool $should_send_email,
        public DateTimeInterface $updated,
        public DateTimeInterface $created,
        public ?string $mid_label,
        public ?Currency $currency,
        public ?string $success_redirect_url,
        public ?string $failure_redirect_url,
        public ?string $payment_methods,
        public ?array $fixed_va,
        public ?array $items,
        public ?array $fees,
        public ?PaymentDetails $payment_details,
        public ?bool $should_authenticate_credit_card,
        public ?CardChannelProperties $channel_properties,
        public ?array $metadata,
    ) {}
}
